import tkinter as tk
from tkinter import messagebox

class Pila:
    def __init__(self):
        self.items = []

    def apilar(self, x):
        self.items.append(x)

    def desapilar(self):
        if self.es_vacia():
            raise ValueError("La pila está vacía")
        return self.items.pop()

    def es_vacia(self):
        return len(self.items) == 0

    def elementos(self):
        return list(self.items)


class PilaGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Simulación de Pila (Stack)")
        self.pila = Pila()

        self.entry = tk.Entry(root, font=("Arial", 14))
        self.entry.pack(pady=10)

        self.btn_apilar = tk.Button(root, text="Apilar", command=self.apilar, width=10, bg="lightgreen")
        self.btn_apilar.pack(pady=5)

        self.btn_desapilar = tk.Button(root, text="Desapilar", command=self.desapilar, width=10, bg="lightcoral")
        self.btn_desapilar.pack(pady=5)

        self.canvas = tk.Canvas(root, width=200, height=400, bg="white")
        self.canvas.pack(pady=10)

        self.dibujar_pila()

    def apilar(self):
        valor = self.entry.get()
        if valor.strip() == "":
            messagebox.showwarning("Entrada vacía", "Ingresa un valor antes de apilar.")
            return
        self.pila.apilar(valor)
        self.entry.delete(0, tk.END)
        self.dibujar_pila()

    def desapilar(self):
        try:
            valor = self.pila.desapilar()
            messagebox.showinfo("Elemento desapilado", f"Se quitó: {valor}")
            self.dibujar_pila()
        except ValueError as e:
            messagebox.showerror("Error", str(e))

    def dibujar_pila(self):
        self.canvas.delete("all")
        elementos = self.pila.elementos()
        altura = 40
        ancho = 150
        x0, y0 = 25, 380

        for i, elem in enumerate(reversed(elementos)):
            y = y0 - i * altura
            self.canvas.create_rectangle(x0, y - altura, x0 + ancho, y, fill="lightblue")
            self.canvas.create_text(x0 + ancho / 2, y - altura / 2, text=str(elem), font=("Arial", 12))


if __name__ == "__main__":
    root = tk.Tk()
    app = PilaGUI(root)
    root.mainloop()
